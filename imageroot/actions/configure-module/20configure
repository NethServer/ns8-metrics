#!/usr/bin/env python3

#
# Copyright (C) 2025 Nethesis S.r.l.
# SPDX-License-Identifier: GPL-3.0-or-later
#

import os
import sys
import json

import agent
import agent.tasks

def save_config(request):
    rdb = agent.redis_connect(privileged=True)
    if 'mail_to' in request:
        request['mail_to'] = ','.join(request['mail_to'])
    rdb.hset(f'module/{os.environ["MODULE_ID"]}/settings', mapping={k: str(v) for k, v in request.items()})

request = json.load(sys.stdin)

prometheus_path = request.get('prometheus_path')
grafana_path = request.get('grafana_path')

save_config(request.copy())

# Configure Traefik to route prometheus path requests to the prometheus service
if prometheus_path:
    agent.set_env("PROMETHEUS_PATH", prometheus_path)
    response = agent.tasks.run(
        agent_id=agent.resolve_agent_id('traefik@node'),
        action='set-route',
        data={
            'instance': os.environ['MODULE_ID'] + '_prometheus',
            'url': 'http://127.0.0.1:9091',
            'http2https': True,
            'path': f'/{prometheus_path}',
        },
    )
else:
    # Remove traefik route
    agent.set_env("PROMETHEUS_PATH", "")
    response = agent.tasks.run(
        agent_id=agent.resolve_agent_id('traefik@node'),
        action='delete-route',
        data={
            'instance': os.environ['MODULE_ID'] + '_prometheus'
        },
    )

# Configure Traefik to route grafana path requests to the grafana service
if grafana_path:
    agent.set_env("GRAFANA_PATH", grafana_path)
    response = agent.tasks.run(
        agent_id=agent.resolve_agent_id('traefik@node'),
        action='set-route',
        data={
            'instance': os.environ['MODULE_ID'] + '_grafana',
            'url': 'http://127.0.0.1:3000',
            'http2https': True,
            'path': f'/{grafana_path}',
            "forward_auth": {
                "address": "http://127.0.0.1:9311/api/module/metrics1/http-basic/authorize-metrics",
                "skip_tls_verify": True,
                "auth_response_headers": [ "X-Auth-User" ]
            }
        },
    )
else:
    # Remove traefik route
    agent.set_env("GRAFANA_PATH", "")
    response = agent.tasks.run(
        agent_id=agent.resolve_agent_id('traefik@node'),
        action='delete-route',
        data={
            'instance': os.environ['MODULE_ID'] + '_grafana'
        },
    )
