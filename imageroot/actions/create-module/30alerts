#!/usr/bin/env python3

#
# Copyright (C) 2025 Nethesis S.r.l.
# SPDX-License-Identifier: GPL-3.0-or-later
#

import os

# Create the directory if it doesn't exist
os.makedirs('rules.d', exist_ok=True)

# Write the nodes.yml file
with open('rules.d/nodes.yml', 'w') as f:
    f.write('''groups:
- name: Nodes
  rules:
  - alert: node_offline
    expr: up{job="providers",target_type="node"} == 0
    for: 5m
    labels:
      severity: critical
    annotations:
      summary: "Cluster node {{ $labels.node }} is offline"
      description: "The node target has disappeared. This may be caused by a network outage or a software issue, for example if its metric exporter has crashed."
''')

# Write the targets.yml file, for targets defined by modules
with open('rules.d/targets.yml', 'w') as f:
    f.write(r'''groups:
- name: Targets
  rules:
  - alert: target_offline
    expr: up{job="providers",target_type!="node"} == 0
    for: 5m
    labels:
      severity: critical
    annotations:
      summary: Target {{ $labels.target_type }} of {{ $labels.module_id }} is offline
      description: "A module target has disappeared. Its metric exporter might be crashed, or node {{ $labels.node }} is offline."
''')

# Write the loki.yml file
with open('rules.d/loki.yml', 'w') as f:
    f.write('''groups:
- name: Loki
  rules:
  - alert: loki_offline
    expr: up{job="loki"} == 0
    for: 0m
    labels:
      severity: warning
      node: ''' + os.getenv("NODE_ID") + '''
    annotations:
      summary: Loki instance {{ $labels.instance }} is down
      description: "Loki is stopped or is not running properly.\\n  VALUE = {{ $value }}\\n  LABELS = {{ $labels }}"
''')

# Write the memory.yml file
with open('rules.d/memory.yml', 'w') as f:
    f.write('''groups:
- name: Memory
  rules:
  - alert: swap_full
    expr: ((1 - (node_memory_SwapFree_bytes / node_memory_SwapTotal_bytes)) * 100 > 80)
    for: 2m
    labels:
      severity: warning
    annotations:
      summary: Host swap is filling up (instance {{ $labels.instance }})
      description: "Swap is filling up (>80%)\\n  VALUE = {{ $value }}\\n  LABELS = {{ $labels }}"

  - alert: swap_notpresent
    expr: node_memory_SwapTotal_bytes == 0
    for: 0m
    labels:
      severity: critical
    annotations:
      summary: Swap not configured (instance {{ $labels.instance }})
      description: "Swap is not configured on this host.\\n "
''')


# Write the disk.yml file
with open('rules.d/disk.yml', 'w') as f:
    f.write('''groups:
- name: Disk
  rules:
  - alert: disk_full
    expr: (node_filesystem_avail_bytes{fstype!~"^(fuse.*|tmpfs|cifs|nfs)"} / node_filesystem_size_bytes < .10 and on (instance, device, mountpoint) node_filesystem_readonly == 0)
    for: 2m
    labels:
      severity: warning
    annotations:
      summary: Host out of disk space (instance {{ $labels.instance }})
      description: "Disk is almost full (< 10% left)\\n  VALUE = {{ $value }}\\n  LABELS = {{ $labels }}"

  - alert: md_failure
    expr: (node_md_disks{state="failed"} > 0)
    for: 2m
    labels:
      severity: critical
    annotations:
      summary: Host software RAID disk failure (instance {{ $labels.instance }})
      description: "MD RAID array {{ $labels.device }} on {{ $labels.instance }} needs attention.\\n  VALUE = {{ $value }}\\n  LABELS = {{ $labels }}"
''')

# Write the backup.yml file
with open('rules.d/backup.yml', 'w') as f:
    f.write('''groups:
- name: Backup
  rules:
  - alert: backup_failed
    expr: node_backup_status == 0
    for: 0m
    labels:
      severity: critical
    annotations:
      summary: "Backup failed"
      description: "The backup {name} ({id}) has failed."
''')

# Write the tlscert.yml file
with open('rules.d/tlscert.yml', 'w') as f:
    f.write(r'''groups:
- name: TLS certificates
  rules:
  - alert: certexp
    expr: 7d <= (traefik_tls_certs_not_after - time()) < 28d
    for: 5m
    labels:
      severity: warning
    annotations:
      summary: "TLS certificate on Node {{ $labels.node }} expires in {{ $value | humanizeDuration }}"
      description: >
        The {{ $labels.module_id }} certificate {{ $labels.cn }} valid for {{ $labels.sans }}
        on Node {{ $labels.node }} expires in less than 28 days. It must be renewed, or
        removed from the TLS certificates page.
  - alert: certexp
    expr: 0 < (traefik_tls_certs_not_after - time()) < 7d
    for: 5m
    labels:
      severity: critical
    annotations:
      summary: "TLS certificate on Node {{ $labels.node }} expires in {{ $value | humanizeDuration }}"
      description: >
        The {{ $labels.module_id }} certificate {{ $labels.cn }} valid for {{ $labels.sans }}
        on Node {{ $labels.node }} expires in less than 7 days. It must be renewed, or
        removed from the TLS certificates page.
  - alert: certexp
    expr: (time() - traefik_tls_certs_not_after) > 0
    for: 5m
    labels:
      severity: critical
    annotations:
      summary: "TLS certificate on Node {{ $labels.node }} has expired since {{ $value | humanizeDuration }}"
      description: >
        The {{ $labels.module_id }} expired certificate {{ $labels.cn }} (also for {{ $labels.sans }})
        on Node {{ $labels.node }} must be immediately renewed, or removed from the TLS certificates page.
''')
